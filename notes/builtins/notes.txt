notes: Variable assignment

1) when variable is found in envlist, replace value of env. if not, create a new variable in varlist
2) varlist is unique only to the current process. It does not carry on to the other process.

notes: evnp parameter in the main function
1) Exported Variables: Exported variables are those that have been marked for export using the export command in the shell. These variables are available to child processes of the shell, including any programs that the shell executes. When you run a program from the shell, the shell passes these exported variables to the program via the envp parameter.
2) Non-exported Variables: Non-exported variables are also part of the shell's environment, but they are not marked for export. These variables are typically used for internal shell operations or temporary storage and are not automatically passed to child processes. However, when you run a program from the shell, the shell includes all environment variables, both exported and non-exported, in the envp parameter.

notes: Export
1) export varname --> adds varname into envlist
2) exported variables are unique only to the current process. It does not change the env list from mac.
3) export print is sorted. each line starts with declare -x varname="varvalue"

notes: Echo
1) echo looks for varlist of variable expansion. If not found, proceed to envlist.

notes: env
1) env print is not sorted, but